SELECT NUME, COUNT(NUME), SUM(COST) 
FROM EVENIMENT
GROUP BY NUME
HAVING SUM(COST) BETWEEN 10000 AND 3000000
ORDER BY SUM(COST) DESC
	




SELECT E.NUME, C.NUME, C.PREUME, isnull (L.ADRESA,'Neexistenta')
	FROM EVENIMENT E
	INNER JOIN TEMATICA T
		ON E.ID=T.ID
	INNER JOIN PACHET P
		ON E.ID=P.ID
	INNER JOIN LOCATIE L
		ON E.ID=L.ID
	INNER JOIN CLIENTEV C
		ON E.ID=C.ID
 
	
	 WHERE YEAR(E.DATA_EVENIMENT)>2022 AND E.COST>( SELECT AVG(PRETMINIM) FROM PACHET) AND L.ADRESA LIKE 'Ap%'    
	 ORDER BY E.COST ASC

 

	 
	SELECT E.NUME,E.DATA_EVENIMENT, E.ID_TEMATICA
	FROM EVENIMENT E
	WHERE E.ID_TEMATICA IN (SELECT ID
							FROM TEMATICA 
							WHERE ID IN (SELECT ID FROM TEMATICA WHERE DESCRIERE LIKE '%s')
							  )
 
 SELECT Nume,
"Pret" =   
      CASE   
         WHEN COST =  0 THEN 'Mfg item - not for resale'  
         WHEN COST < 1500 THEN 'Sub 1500 lei'  
         WHEN COST >= 500 and COST < 2500 THEN 'Sub 2500 lei'  
         WHEN COST >= 2500 and COST < 1000 THEN 'Sub 2500 lei'  
         ELSE 'Peste 10000 lei'  
      END  
FROM Eveniment
 
SELECT E.NUME,E.DATA_EVENIMENT, E.ID_TEMATICA
FROM EVENIMENT E
WHERE E.ID_TEMATICA IN (SELECT ID FROM TEMATICA WHERE ID IN 
							(SELECT ID 
							FROM TEMATICA 
							WHERE DESCRIERE LIKE '%s')) and YEAR(E.DATA_EVENIMENT)<2024

CREATE SEQUENCE SEQ_EVENIMENT 
AS INT
START WITH 1
INCREMENT BY 1

CREATE VIEW[EVENIMENT_CLIENTEV] AS
SELECT EVENIMENT.COST, CLIENTEV.NUME, CLIENTEV.PREUME
FROM EVENIMENT, CLIENTEV
WHERE EVENIMENT.ID=CLIENTEV.ID

SELECT *
FROM EVENIMENT_CLIENTEV



